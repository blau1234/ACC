{
  "creation_stats": {
    "total_documents": 464,
    "processed_documents": 464,
    "failed_documents": 0,
    "total_tokens_estimated": 0,
    "processing_time": 16.744675636291504,
    "vector_store_created": true
  },
  "configuration": {
    "embedding_model": "text-embedding-3-small",
    "dimensions": 1536,
    "vector_store": "Chroma",
    "chunk_processing": "langchain_documents",
    "batch_size": 100
  },
  "verification": {
    "collection_exists": true,
    "total_documents": 464,
    "expected_documents": 464,
    "match_expected": true,
    "test_queries": {
      "create wall geometry": {
        "result_count": 3,
        "first_result_preview": "Function: connect_wall\\nModule: geometry\\nCategories: connection, geometry\\n\\n## connect_wall  \n```p",
        "relevance_metadata": {
          "tags": "[\"connection\", \"geometry\"]",
          "complexity": "Simple",
          "parameters": "{}",
          "has_parameters": "False",
          "function_name": "connect_wall",
          "has_returns": "False",
          "has_code": "True",
          "chunk_size": "232",
          "has_examples": "False",
          "document_type": "api_reference",
          "chunk_type": "function",
          "word_count": "18",
          "chunk_id": "chunk_0159",
          "source_file": "api_reference_api_geometry_index.md",
          "returns": "{\"type\": \"ifcopenshell.entity_instance | None\", \"description\": \"\"}",
          "headers": "{\"module\": \"Geometry\", \"function\": \"connect_wall\"}",
          "signature": "ifcopenshell.api.geometry.connect_wall(file: ifcopenshell.file, wall1: ifcopenshell.entity_instance, wall2: ifcopenshell.entity_instance, is_atpath: bool = False) → ifcopenshell.entity_instance | None",
          "module": "geometry"
        }
      },
      "material properties": {
        "result_count": 3,
        "first_result_preview": "Documentation Type: subsection from api_index.md\\n\\n## Material & Physical Properties  \n### material",
        "relevance_metadata": {
          "chunk_type": "subsection",
          "is_reference": "True",
          "has_code": "False",
          "word_count": "170",
          "headers": "{\"title\": \"IfcOpenShell API Reference\", \"section\": \"Material & Physical Properties\", \"subsection\": \"material\"}",
          "has_installation": "False",
          "chunk_id": "chunk_0018",
          "document_type": "guide",
          "has_import": "False",
          "source_file": "api_index.md",
          "is_tutorial": "False",
          "chunk_size": "3277"
        }
      },
      "spatial structure organization": {
        "result_count": 3,
        "first_result_preview": "Function: dereference_structure\\nModule: spatial\\n\\n## dereference_structure  \n```python\nifcopenshel",
        "relevance_metadata": {
          "chunk_size": "2202",
          "signature": "ifcopenshell.api.spatial.dereference_structure(file: ifcopenshell.file, products: list[ifcopenshell.entity_instance], relating_structure: ifcopenshell.entity_instance) → None",
          "chunk_type": "function",
          "module": "spatial",
          "complexity": "Complex",
          "chunk_id": "chunk_0334",
          "source_file": "api_reference_api_spatial_index.md",
          "headers": "{\"module\": \"Spatial\", \"function\": \"dereference_structure\"}",
          "document_type": "api_reference",
          "has_code": "True",
          "tags": "[]",
          "word_count": "173",
          "function_name": "dereference_structure",
          "has_parameters": "True",
          "has_examples": "True",
          "parameters": "{\"products\": {\"type\": \"list[ifcopenshell.entity_instance]\", \"description\": \"The list of physical IfcElements that exists in the space.\", \"required\": true}, \"relating_structure\": {\"type\": \"ifcopenshell.entity_instance\", \"description\": \"The IfcSpatialStructureElement element, such as IfcBuilding, IfcBuildingStorey, or IfcSpace that the element exists in.\", \"required\": true}}",
          "returns": "{\"type\": \"None\", \"description\": \"None\"}",
          "has_returns": "True"
        }
      }
    }
  },
  "generated_at": "2025-08-16T22:54:32.110841",
  "langchain_version": "2.0",
  "framework": "LangChain + OpenAI + ChromaDB"
}